name: Claude Pricing Agent

on:
  # Run daily at 9 AM UTC (5 AM EST)
  schedule:
    - cron: '0 9 * * *'

  # Allow manual triggering
  workflow_dispatch:
    inputs:
      force_update:
        description: 'Force update even if no changes detected'
        required: false
        default: 'false'
        type: boolean

jobs:
  update-pricing:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm install
          npm install node-fetch

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "Pricing Agent"

      - name: Run Pricing Agent
        id: pricing-agent
        run: |
          echo "Starting pricing agent..."
          node src/agents/pricing-agent.js

          # Check if there are any changes
          if git diff --quiet src/data/pricing.json; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "No pricing changes detected"
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "Pricing changes detected!"
          fi
        env:
          FORCE_UPDATE: ${{ github.event.inputs.force_update }}

      - name: Create Pull Request for Pricing Changes
        if: steps.pricing-agent.outputs.has_changes == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: |
            ü§ñ Update Claude pricing data - $(date +%Y-%m-%d)

            Automated pricing update detected changes:
            - Updated pricing.json with latest data from claude.com/pricing
            - Archived previous version for history
            - Updated "Accurate as of" timestamp

            Changes detected by pricing-agent on $(date)

            ü§ñ Generated by Pricing Agent
          title: 'ü§ñ Claude Pricing Update - $(date +%Y-%m-%d)'
          body: |
            ## üìä Automated Pricing Update

            The pricing agent has detected changes in Claude's pricing structure.

            ### What Changed
            This PR updates the pricing data with the latest information from [claude.com/pricing](https://claude.com/pricing).

            ### Files Modified
            - `src/data/pricing.json` - Updated with latest pricing
            - `src/data/archives/` - Previous version archived with timestamp

            ### Verification
            Please review the changes to ensure accuracy before merging.

            ### Auto-Generated
            This pull request was automatically created by the pricing agent workflow.

            ---
            ü§ñ **Pricing Agent** | Last run: $(date)
          branch: pricing-update-$(date +%Y-%m-%d)
          branch-suffix: timestamp
          delete-branch: true

      - name: Auto-merge if minor changes
        if: steps.pricing-agent.outputs.has_changes == 'true'
        run: |
          # Get the PR number from the previous step
          PR_NUMBER=$(gh pr list --head pricing-update-$(date +%Y-%m-%d) --json number --jq '.[0].number')

          if [ ! -z "$PR_NUMBER" ]; then
            echo "PR created: #$PR_NUMBER"

            # Check if changes are minor (only timestamps or small price adjustments)
            MAJOR_CHANGES=$(git diff HEAD~1 src/data/pricing.json | grep -E "^\+.*[0-9]{2,}" | wc -l)

            if [ "$MAJOR_CHANGES" -lt 3 ]; then
              echo "Minor changes detected, auto-merging..."
              gh pr merge $PR_NUMBER --auto --squash
            else
              echo "Major changes detected, manual review required"
              gh pr comment $PR_NUMBER --body "‚ö†Ô∏è **Major pricing changes detected** - Manual review recommended before merging"
            fi
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update deployment
        if: steps.pricing-agent.outputs.has_changes == 'true'
        run: |
          echo "Pricing changes committed and will be deployed automatically by Netlify"

      - name: Notify on failure
        if: failure()
        run: |
          echo "‚ùå Pricing agent failed to run"
          echo "Check the logs for details"

  # Optional: Weekly health check
  health-check:
    runs-on: ubuntu-latest
    if: github.event.schedule == '0 9 * * 1'  # Monday only

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Verify pricing data integrity
        run: |
          echo "üîç Running weekly health check..."

          # Check if pricing.json exists and is valid JSON
          if [ -f "src/data/pricing.json" ]; then
            echo "‚úÖ pricing.json exists"

            if jq empty src/data/pricing.json; then
              echo "‚úÖ pricing.json is valid JSON"
            else
              echo "‚ùå pricing.json is invalid JSON"
              exit 1
            fi

            # Check if it has required fields
            LAST_UPDATED=$(jq -r '.lastUpdated' src/data/pricing.json)
            if [ "$LAST_UPDATED" != "null" ]; then
              echo "‚úÖ lastUpdated field present: $LAST_UPDATED"
            else
              echo "‚ö†Ô∏è lastUpdated field missing"
            fi

            # Check if pricing data is not too old (more than 7 days)
            DAYS_OLD=$(( ($(date +%s) - $(date -d "$LAST_UPDATED" +%s)) / 86400 ))
            if [ $DAYS_OLD -lt 7 ]; then
              echo "‚úÖ Pricing data is recent ($DAYS_OLD days old)"
            else
              echo "‚ö†Ô∏è Pricing data is $DAYS_OLD days old - consider manual update"
            fi

          else
            echo "‚ùå pricing.json not found"
            exit 1
          fi

          echo "üéâ Health check completed successfully"